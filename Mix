*&---------------------------------------------------------------------*
*& Report ZFIN_UPLOAD_PROC_ALT_MIXRATIO
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& DD ID        :                                                      *
*& FS ID        :                                                      *
*& User Stories : EWOW-36157                                           *
*& Work Item    : 8000023110                                           *
*&---------------------------------------------------------------------*
*& Global declarations                                                 *
*&---------------------------------------------------------------------*
*& Transport    : DA2K902869                                           *
*&---------------------------------------------------------------------*
*& Change Log:      Selection Screen                                   *
*&---------------------------------------------------------------------*
*& Author      ¦ Date           ¦ Comment                              *
*&---------------------------------------------------------------------*
*  DEHSUMU     30.05.2022       Initial Build                          *
*&---------------------------------------------------------------------*
REPORT zfin_update_proc_alt_mixratio.

INCLUDE zfin_upd_procalt_mixratio_top.
INCLUDE zfin_upd_procalt_mixratio_sel.
INCLUDE zfin_upd_procalt_mixratio_cd.
INCLUDE zfin_upd_procalt_mixratio_ci.


*----------------------------------------------------------------------*
*       On Value Request for file
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file.
  lcl_main=>on_val_req( ).


*----------------------------------------------------------------------*
*      Start of selection
*----------------------------------------------------------------------*
START-OF-SELECTION.
  lcl_main=>main_start( EXPORTING iv_file = p_file
                                  iv_downld_alt = rb_dnalt
                                  iv_upload_alt = rb_upalt
                                  iv_downld_mix = rb_dnmix
                                  iv_upload_mix = rb_upmix ).


*&---------------------------------------------------------------------*
*& Include          ZFIN_UPD_PROCALT_MIXRATIO_CD
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& DD ID        :                                                      *
*& FS ID        :                                                      *
*& User Stories : EWOW-36157                                           *
*& Work Item    : 8000023110                                           *
*&---------------------------------------------------------------------*
*& Global declarations                                                 *
*&---------------------------------------------------------------------*
*& Transport    : DA2K902869                                           *
*&---------------------------------------------------------------------*
*& Change Log:      Selection Screen                                   *
*&---------------------------------------------------------------------*
*& Author      ¦ Date           ¦ Comment                              *
*&---------------------------------------------------------------------*
*  DEHSUMU     30.05.2022       Initial Build                          *
*&---------------------------------------------------------------------*

** Main processing class
CLASS lcl_main DEFINITION.

  PUBLIC SECTION.
    CONSTANTS: c_ck91 TYPE char4 VALUE 'CK91'.

    DATA: mode    TYPE c VALUE 'N'.

    CLASS-METHODS: main_start IMPORTING iv_file       TYPE rlgrap-filename
                                        iv_downld_alt TYPE abap_bool
                                        iv_downld_mix TYPE abap_bool
                                        iv_upload_alt TYPE abap_bool
                                        iv_upload_mix TYPE abap_bool,
      on_val_req.

    METHODS: constructor IMPORTING iv_file       TYPE rlgrap-filename
                                   iv_downld_alt TYPE abap_bool
                                   iv_downld_mix TYPE abap_bool
                                   iv_upload_alt TYPE abap_bool
                                   iv_upload_mix TYPE abap_bool,
      read_data,
      create_proc_alt,
      mix_ratio.


    CLASS-DATA : lo_main       TYPE REF TO lcl_main,
                 lv_file       TYPE rlgrap-filename,
                 lv_downld_alt TYPE abap_bool,
                 lv_downld_mix TYPE abap_bool,
                 lv_upload_alt TYPE abap_bool,
                 lv_upload_mix TYPE abap_bool.

    TYPES: BEGIN OF ty_proc_alt ,
             matnr        TYPE matnr,
             plant        TYPE werks_d,
             proc_type    TYPE ckml_btyp,
             prod_version TYPE verid,
           END OF ty_proc_alt,

           BEGIN OF ty_mix_cost,
             matnr        TYPE matnr,
             plant        TYPE werks_d,
             mix_ind      TYPE ckml_mgtyp,
             perio        TYPE poper,
             gjahr        TYPE gjahr,
             prod_version TYPE verid,
             mix_per      TYPE ckmlmv003-misch_verh,
           END OF ty_mix_cost,

           tt_proc_alt TYPE STANDARD TABLE OF ty_proc_alt,
           tt_mix_cost TYPE STANDARD TABLE OF ty_mix_cost.


  PRIVATE SECTION.
    METHODS:
      download_file,

      update_data,

      populate_procure_alt EXPORTING et_proc_alt TYPE  tt_proc_alt, "Populate Procurement alternative

      download_mix_ratio   EXPORTING et_mix_ratio TYPE tt_mix_cost, "Download mix ratio

      display_data CHANGING it_out TYPE ANY TABLE ,

      call_transaction_ck91 IMPORTING iv_matnr        TYPE matnr
                                      iv_plant        TYPE werks_d
                                      proc_type       TYPE ckml_btyp
                                      iv_prod_version TYPE verid
                            EXPORTING et_return       TYPE /cwm/tab_bdcmsgcoll,

      call_transaction_ck91_wpopup IMPORTING iv_matnr        TYPE matnr
                                             iv_plant        TYPE werks_d
                                             proc_type       TYPE ckml_btyp
                                             iv_prod_version TYPE verid
                                   EXPORTING et_return       TYPE /cwm/tab_bdcmsgcoll .

ENDCLASS.

*&---------------------------------------------------------------------*
*& Include          ZFIN_UPD_PROCALT_MIXRATIO_CI
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& DD ID        :                                                      *
*& FS ID        :                                                      *
*& User Stories : EWOW-36157                                           *
*& Work Item    : 8000023110                                           *
*&---------------------------------------------------------------------*
*& Global declarations                                                 *
*&---------------------------------------------------------------------*
*& Transport    : DA2K902869                                           *
*&---------------------------------------------------------------------*
*& Change Log:      Selection Screen                                   *
*&---------------------------------------------------------------------*
*& Author      ¦ Date           ¦ Comment                              *
*&---------------------------------------------------------------------*
*  DEHSUMU     30.05.2022       Initial Build                          *
*&---------------------------------------------------------------------*
CLASS lcl_main IMPLEMENTATION.

  "Constructor method
  METHOD constructor.

    lv_file = iv_file.
    lv_downld_alt = iv_downld_alt.
    lv_downld_mix = iv_downld_mix.
    lv_upload_alt = iv_upload_alt.
    lv_upload_mix = iv_upload_mix.

  ENDMETHOD.

  "Method for On value request
  METHOD on_val_req.
**Declaration
    DATA : lv_files     TYPE i,
           lt_filetable TYPE filetable.

*** Class Method for File selection path to read file
    CALL METHOD cl_gui_frontend_services=>file_open_dialog
      EXPORTING
        window_title            = CONV string( TEXT-t02 )     "'Select File'
        multiselection          = ''
      CHANGING
        file_table              = lt_filetable
        rc                      = lv_files
      EXCEPTIONS
        file_open_dialog_failed = 1
        cntl_error              = 2
        error_no_gui            = 3
        not_supported_by_gui    = 4
        OTHERS                  = 5.

    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE   sy-msgty
                          NUMBER sy-msgno
                          WITH   sy-msgv1
                                 sy-msgv2
                                 sy-msgv3
                                 sy-msgv4.
    ENDIF.

    TRY.
**** Extract selected file path
        p_file = lt_filetable[ 1 ].
      CATCH cx_sy_itab_line_not_found.
        CLEAR p_file.
    ENDTRY.

  ENDMETHOD.

  METHOD  main_start.

    AUTHORITY-CHECK OBJECT 'S_TCODE' ID 'TCD' FIELD 'ZFIN_T_OWNPROD_MIX'.
    IF sy-subrc <> 0.
      MESSAGE TEXT-003 TYPE 'E'.
    ENDIF.

*** Authority Check Object
    AUTHORITY-CHECK OBJECT 'ZFIN_CR_GL' ID 'ACTVT' FIELD '16'.
    IF sy-subrc <> 0.
      MESSAGE ID 'ZFINANCE' TYPE 'E' NUMBER '118'.
    ENDIF.

    CREATE OBJECT lo_main
      EXPORTING
        iv_file       = iv_file
        iv_downld_alt = iv_downld_alt
        iv_downld_mix = iv_downld_mix
        iv_upload_alt = iv_upload_alt
        iv_upload_mix = iv_upload_mix.

    IF iv_downld_alt = abap_true OR iv_downld_mix = abap_true.
      lo_main->download_file( ).
    ELSEIF iv_upload_alt = abap_true.
      lo_main->update_data( ).
      lo_main->display_data( CHANGING it_out = lt_file_alt  ).
    ELSEIF iv_upload_mix = abap_true.
      lo_main->update_data( ).
      lo_main->display_data( CHANGING it_out = lt_file_mix ).
    ENDIF.

  ENDMETHOD.
  METHOD populate_procure_alt.

    DATA: lt_file_alt TYPE TABLE OF ty_proc_alt,
          lr_kalnr    TYPE RANGE OF ckml_alprocnr.


    SELECT matnr,
           werks AS plant,
           btyp AS proc_type,
           verid_nd AS prod_version
           FROM ckmlmv001
           INTO TABLE @DATA(lt_proc_alt)
           WHERE kalnr IN @lr_kalnr
           AND    btyp = 'BF'
           GROUP BY matnr,werks,btyp,verid_nd.
    IF sy-subrc EQ 0.

      SORT lt_proc_alt BY matnr DESCENDING plant proc_type prod_version DESCENDING.
      "If multiple lines exist for same materia with empty prod version and not empty prod, prod version should be empty in the output
      LOOP AT lt_proc_alt ASSIGNING FIELD-SYMBOL(<fs_alt_proc>).
        AT NEW plant.
          IF <fs_alt_proc>-prod_version EQ space.
            APPEND INITIAL LINE TO et_proc_alt ASSIGNING FIELD-SYMBOL(<fs_proc_alt_e>).
            <fs_proc_alt_e> = <fs_alt_proc>.
          ENDIF.
        ENDAT.
        IF <fs_alt_proc>-prod_version <> space.
          APPEND INITIAL LINE TO et_proc_alt ASSIGNING <fs_proc_alt_e>.
          <fs_proc_alt_e> = <fs_alt_proc>.
        ENDIF.
      ENDLOOP.

    ENDIF.

  ENDMETHOD.

  METHOD download_mix_ratio.

    SELECT a~matnr,
           a~werks AS plant,
           a~mgtyp AS mix_ind,
           a~perio,
           a~gjahr,
           b~verid_nd AS prod_version,
           misch_verh AS mix_per
           FROM ckmlmv003 AS a
           LEFT OUTER JOIN ckmlmv001 AS b
           ON a~kalnr_bal = b~kalnr
           INTO TABLE @DATA(lt_mix_ratio)
           WHERE a~mgtyp = 'MIX'
           AND   b~btyp = 'BF'
           GROUP BY a~matnr,a~werks,a~mgtyp,a~perio,gjahr,verid_nd,misch_verh.
    IF sy-subrc EQ 0.

      SORT lt_mix_ratio BY matnr DESCENDING plant prod_version DESCENDING.

      LOOP AT lt_mix_ratio ASSIGNING FIELD-SYMBOL(<fs_mix_ratio>).

        AT NEW plant.

          IF <fs_mix_ratio>-prod_version EQ space.
            APPEND INITIAL LINE TO et_mix_ratio ASSIGNING FIELD-SYMBOL(<fs_mix_ratio_e>).
            <fs_mix_ratio_e> = <fs_mix_ratio>.
          ENDIF.
        ENDAT.
        IF <fs_mix_ratio>-prod_version <> space.
          APPEND INITIAL LINE TO et_mix_ratio ASSIGNING <fs_mix_ratio_e>.
          <fs_mix_ratio_e> = <fs_mix_ratio>.
        ENDIF.
      ENDLOOP.
    ENDIF.

  ENDMETHOD.

  METHOD download_file.

    TYPES : BEGIN OF ty_fname,
              fn TYPE string,
            END OF ty_fname.

    DATA : lv_filename   TYPE string,
           lv_path       TYPE string,
           lv_fullpath   TYPE string,
           lr_zfin_qper  TYPE RANGE OF zfin_qper,
           lrw_zfin_qper LIKE LINE OF lr_zfin_qper,
           lv_ind        TYPE i.

    DATA : f_tabt TYPE TABLE OF ty_fname,
           f_taba TYPE ty_fname.
    DATA :lv_content              TYPE xstring,
          lr_excel_structure      TYPE REF TO data,
          lo_table_row_descriptor TYPE REF TO cl_abap_structdescr,
          lo_source_table_descr   TYPE REF TO cl_abap_tabledescr,
          lt_binary_tab           TYPE TABLE OF sdokcntasc,
          lv_length               TYPE i.

** Download Data
    IF lv_downld_alt = abap_true.

      f_tabt[] = VALUE #( ( fn = TEXT-h01 )              "Material
                          ( fn = TEXT-h02 )               "Plant
                          ( fn = TEXT-h03 )               "Processing Type
                          ( fn = TEXT-h04 ) ).            "Product Version Costing

      "Select data
      populate_procure_alt(
      IMPORTING
        et_proc_alt = lt_file_alt
    ).

      "create data reference for internal table and RTTI class instance to query fields
      GET REFERENCE OF lt_file_alt INTO lr_excel_structure.
    ENDIF.

    IF lv_downld_mix = abap_true.
      f_tabt[] = VALUE #( ( fn = TEXT-h01 )          "Material
                          ( fn = TEXT-h02 )          "Plant
                          ( fn = TEXT-h05 )          "QtyStruct. Type
                          ( fn = TEXT-h06 )          "'Period'
                          ( fn = TEXT-h07 )          "Year
                          ( fn = TEXT-h08 )          "'Product Version Costing'
                          ( fn = TEXT-h09 ) ).       "'Mix Percentage'

      "Select data
      download_mix_ratio(
        IMPORTING
          et_mix_ratio = lt_file_mix
      ).

      "create data reference for internal table and RTTI class instance to query fields
      GET REFERENCE OF lt_file_mix INTO lr_excel_structure.

    ENDIF.

    DATA(lo_itab_services) = cl_salv_itab_services=>create_for_table_ref( lr_excel_structure ).

    lo_source_table_descr ?= cl_abap_tabledescr=>describe_by_data_ref( lr_excel_structure  ).
    lo_table_row_descriptor ?= lo_source_table_descr->get_table_line_type( ).

    DATA(lt_fields) = lo_table_row_descriptor->get_components( ) .

    "excel instantiate
    DATA(lo_tool_xls) = cl_salv_export_tool_ats_xls=>create_for_excel(
                              EXPORTING r_data =  lr_excel_structure  ) .

    "Add columns to sheet
    DATA(lo_config) = lo_tool_xls->configuration( ).

    LOOP AT lt_fields ASSIGNING FIELD-SYMBOL(<lfs_field>) .
      lv_ind  = sy-tabix.

      READ TABLE f_tabt ASSIGNING FIELD-SYMBOL(<fs_tabt>) INDEX lv_ind.
      IF sy-subrc = 0.
        lo_config->add_column(
          EXPORTING
            header_text          =  <fs_tabt>-fn        "'Header'
            field_name           =  CONV string( <lfs_field>-name )
            display_type         =   if_salv_bs_model_column=>uie_text_view ).
      ENDIF.
    ENDLOOP .


    "get excel in xstring
    lo_tool_xls->read_result(  IMPORTING content  = lv_content  ).

    CALL FUNCTION 'SCMS_XSTRING_TO_BINARY'
      EXPORTING
        buffer        = lv_content
      IMPORTING
        output_length = lv_length
      TABLES
        binary_tab    = lt_binary_tab.

    CALL METHOD cl_gui_frontend_services=>file_save_dialog
      EXPORTING
        window_title      = 'Enter File Name'
        default_extension = 'xlsx'
        default_file_name = lv_filename
      CHANGING
        filename          = lv_filename
        path              = lv_path
        fullpath          = lv_fullpath.

** Download Data
    IF lv_filename IS NOT INITIAL.

      CALL FUNCTION 'GUI_DOWNLOAD'
        EXPORTING
          bin_filesize            = lv_length
          filename                = CONV string( lv_fullpath )
          filetype                = 'BIN'
        TABLES
          data_tab                = lt_binary_tab
        EXCEPTIONS
          file_write_error        = 1
          no_batch                = 2
          gui_refuse_filetransfer = 3
          invalid_type            = 4
          no_authority            = 5
          unknown_error           = 6
          header_not_allowed      = 7
          separator_not_allowed   = 8
          filesize_not_allowed    = 9
          header_too_long         = 10
          dp_error_create         = 11
          dp_error_send           = 12
          dp_error_write          = 13
          unknown_dp_error        = 14
          access_denied           = 15
          dp_out_of_memory        = 16
          disk_full               = 17
          dp_timeout              = 18
          file_not_found          = 19
          dataprovider_exception  = 20
          control_flush_error     = 21
          OTHERS                  = 22.

      IF sy-subrc EQ 0.
        MESSAGE i208(00) WITH TEXT-001.
        CALL METHOD cl_gui_frontend_services=>execute
          EXPORTING
            document = lv_filename.
      ELSE.
        MESSAGE i209(00) WITH TEXT-002.
      ENDIF.
    ENDIF.
  ENDMETHOD.

  METHOD update_data.

    me->read_data( ).
    IF lv_upload_alt = abap_true.
      me->create_proc_alt( ).
    ENDIF.
    IF lv_upload_mix = abap_true.
      me->mix_ratio( ).
    ENDIF.

  ENDMETHOD.
  METHOD read_data.

    IF lv_upload_alt = abap_true.
      CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
        EXPORTING
          i_line_header        = abap_true
          i_tab_raw_data       = lt_raw_data
          i_filename           = p_file
        TABLES
          i_tab_converted_data = lt_file_alt
        EXCEPTIONS
          conversion_failed    = 1
          OTHERS               = 2.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ELSE.
        SORT lt_file_alt BY matnr plant.

        LOOP AT lt_file_alt ASSIGNING FIELD-SYMBOL(<fs_conv>).

          CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
            EXPORTING
              input        = <fs_conv>-matnr
            IMPORTING
              output       = <fs_conv>-matnr
            EXCEPTIONS
              length_error = 1
              OTHERS       = 2.
          IF sy-subrc <> 0.
* Implement suitable error handling here
            MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
          ENDIF.
        ENDLOOP.
      ENDIF.

    ENDIF.

    IF lv_upload_mix = abap_true.
      CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
        EXPORTING
          i_line_header        = abap_true
          i_tab_raw_data       = lt_raw_data
          i_filename           = p_file
        TABLES
          i_tab_converted_data = lt_file_mix
        EXCEPTIONS
          conversion_failed    = 1
          OTHERS               = 2.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ELSE.
        SORT lt_file_mix BY matnr plant.

        LOOP AT lt_file_mix ASSIGNING FIELD-SYMBOL(<fs_conv1>).

          CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
            EXPORTING
              input        = <fs_conv1>-matnr
            IMPORTING
              output       = <fs_conv1>-matnr
            EXCEPTIONS
              length_error = 1
              OTHERS       = 2.
          IF sy-subrc <> 0.
* Implement suitable error handling here
            MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDIF.

  ENDMETHOD.

  METHOD create_proc_alt.
    DATA: lv_mkal TYPE mkal.

    LOOP AT lt_file_alt INTO DATA(wa_file_alt).
      "Check if production version exists(batch input can't handle this check)
      CALL FUNCTION 'CK31_PRODUCTION_VERSION_READ'
        EXPORTING
          matnr     = wa_file_alt-matnr
          werks     = wa_file_alt-plant
          verid     = wa_file_alt-prod_version
        IMPORTING
          mkal_exp  = lv_mkal
        EXCEPTIONS
          not_found = 1
          OTHERS    = 2.
      IF sy-subrc <> 0.

        CASE sy-subrc.
          WHEN '1'.
            INSERT VALUE bdcmsgcoll(
              tcode   = c_ck91
              msgtyp  = 'E'
              msgid   = 'CKBA'
              msgnr   = '008'
              msgv1   = wa_file_alt-matnr
              msgv2   = wa_file_alt-plant
              msgv3   = wa_file_alt-prod_version
          ) INTO TABLE it_msg.
          WHEN '2'.
            INSERT VALUE bdcmsgcoll(
            tcode   = c_ck91
            msgtyp  = 'E'
            msgnr   = '161'
            msgv1   = 'CK31_PRODUCTION_VERSION_READ'
            ) INTO TABLE it_msg.
          WHEN OTHERS.
            CLEAR it_msg.
        ENDCASE.

      ELSE.
        CLEAR it_msg.
        "Call ck91 without pop screen
        call_transaction_ck91(
          EXPORTING
            iv_matnr        = wa_file_alt-matnr
            iv_plant        = wa_file_alt-plant
            proc_type       = wa_file_alt-proc_type
            iv_prod_version = wa_file_alt-prod_version
          IMPORTING
            et_return       = it_msg
        ).
        IF lv_missing_auth IS NOT INITIAL.
          "if authorization error occurs terminate execution
          MESSAGE ID '9J' TYPE 'E' NUMBER '401' WITH c_ck91.
        ENDIF.

        READ TABLE it_msg INTO DATA(wa_msg) WITH KEY msgtyp = 'E'.
        IF sy-subrc IS NOT INITIAL.

          "When pop comes up is necessary to add pop up screen info to batch data
          READ TABLE it_msg INTO wa_msg WITH KEY  msgid = '00' msgnr = '344'.
          IF sy-subrc IS INITIAL.

            IF wa_msg-msgv1 = 'SAPLSPO5' AND wa_msg-msgv2 = '0110'."pop up screen
              CLEAR it_msg.
              "Call ck91 with pop screen
              call_transaction_ck91_wpopup(
             EXPORTING
                iv_matnr        = wa_file_alt-matnr
                iv_plant        = wa_file_alt-plant
                proc_type       = wa_file_alt-proc_type
                iv_prod_version = wa_file_alt-prod_version
              IMPORTING
                et_return       = it_msg
            ).
              IF lv_missing_auth IS NOT INITIAL.
                "if authorization error occurs terminate execution
                MESSAGE ID '9J' TYPE 'E' NUMBER '401' WITH c_ck91.
              ENDIF.
            ELSE.
              "Batch cancelled - check CK91 manually to get more info on error
              INSERT VALUE bdcmsgcoll(
                tcode   = c_ck91
                msgtyp  = 'E'
                msgid   = wa_msg-msgid
                msgnr   = wa_msg-msgid
                msgv1   = wa_msg-msgv1
                msgv2   = wa_msg-msgv2
                msgv3   = wa_msg-msgv3
                msgv4   = wa_msg-msgv4
            ) INTO TABLE it_msg.
            ENDIF.
          ENDIF.
        ENDIF.
      ENDIF.

      "add log data
      APPEND INITIAL LINE TO lt_alt_alv ASSIGNING FIELD-SYMBOL(<fs_alt_alv>).
      MOVE-CORRESPONDING wa_file_alt TO <fs_alt_alv>.

      READ TABLE it_msg INTO wa_msg WITH KEY msgtyp = 'E'.
      IF sy-subrc = 0.
        "Error occurs
        MESSAGE ID wa_msg-msgid TYPE wa_msg-msgtyp NUMBER wa_msg-msgnr
          WITH wa_msg-msgv1 wa_msg-msgv2 wa_msg-msgv3 wa_msg-msgv4 INTO DATA(lv_msg).
        <fs_alt_alv>-semaphore  = icon_red_light.
        <fs_alt_alv>-status     = c_nok.
        <fs_alt_alv>-message    = lv_msg.
      ELSE.
        "Success
        MESSAGE s036(zfinance) INTO lv_msg.
        <fs_alt_alv>-semaphore  = icon_green_light.
        <fs_alt_alv>-status     = c_ok.
        <fs_alt_alv>-message    = lv_msg.
      ENDIF.

      CLEAR : wa_file_alt , lv_msg , it_bdcdata , it_msg , lv_mkal.
    ENDLOOP.
  ENDMETHOD.

  METHOD mix_ratio.

    CONSTANTS : lc_mgtype TYPE ckml_mgtyp VALUE 'MIX'.
    DATA : lt_procalt TYPE ckmv1_alt_cratio_tbl,
           lt_procmat TYPE ckmv1_mat_cratio_tbl.

    DATA(lt_mix_upd) = lt_file_mix.
    DELETE ADJACENT DUPLICATES FROM lt_mix_upd COMPARING matnr plant gjahr perio mix_ind.

    LOOP AT lt_mix_upd INTO DATA(wa_mix_upd) .
      "add entry to log table
      INSERT VALUE ty_mix_cost_alv(
          matnr        = wa_mix_upd-matnr
          plant        = wa_mix_upd-plant
          mix_ind      = wa_mix_upd-mix_ind
          perio        = wa_mix_upd-perio
          gjahr        = wa_mix_upd-gjahr
          prod_version = wa_mix_upd-prod_version
          mix_per      = wa_mix_upd-mix_per
      ) INTO TABLE lt_file_mix_alv ASSIGNING FIELD-SYMBOL(<fs_mix_cost_alv>).
      "check if prod version is empty
      IF wa_mix_upd-prod_version IS INITIAL.
        <fs_mix_cost_alv>-semaphore   = icon_red_light.
        <fs_mix_cost_alv>-status      = c_nok.
        <fs_mix_cost_alv>-message = TEXT-e02.
        CONTINUE.
      ENDIF.

      CALL FUNCTION 'MIXRATIO_READ'
        EXPORTING
          i_plant           = wa_mix_upd-plant
          i_matnr           = wa_mix_upd-matnr
          i_fyear           = wa_mix_upd-gjahr
          i_perio           = wa_mix_upd-perio
          i_mgtyp           = lc_mgtype
          i_mixratio_result = 'X'
        IMPORTING
          mixratio_valtype  = lt_procmat
          mixratio_procalt  = lt_procalt
        EXCEPTIONS
          input_error       = 1
          no_mixratio       = 2
          OTHERS            = 3.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO <fs_mix_cost_alv>-message.
        <fs_mix_cost_alv>-semaphore  = icon_red_light.
        <fs_mix_cost_alv>-status     = c_nok.
        CONTINUE.
      ENDIF.

      IF lt_procalt IS NOT INITIAL.
        LOOP AT lt_procalt ASSIGNING FIELD-SYMBOL(<fs_procalt>).
          READ TABLE lt_file_mix ASSIGNING FIELD-SYMBOL(<fs_mix>) WITH KEY matnr = <fs_procalt>-matnr
                                                                           plant = <fs_procalt>-bwkey
                                                                           gjahr = wa_mix_upd-gjahr
                                                                           perio = wa_mix_upd-perio
                                                                           prod_version = <fs_procalt>-balt_name_str-verid_nd.

          IF sy-subrc = 0.
            <fs_procalt>-misch_verh = <fs_mix>-mix_per.
          ENDIF.
        ENDLOOP.

        CALL FUNCTION 'CKML_MGV_CROSS_RATIO_UPDATE'
          EXPORTING
            iv_mgtyp      = lc_mgtype
            iv_gjahr      = wa_mix_upd-gjahr
            iv_perio      = wa_mix_upd-perio
            it_alt_cratio = lt_procalt.

        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
          EXPORTING
            wait = abap_true.
        "Sucess message
        MESSAGE s036(zfinance) INTO <fs_mix_cost_alv>-message.
        <fs_mix_cost_alv>-semaphore  = icon_green_light.
        <fs_mix_cost_alv>-status     = c_ok.

      ENDIF.
      CLEAR : wa_mix_upd .
      UNASSIGN : <fs_procalt> , <fs_mix>, <fs_mix_cost_alv>.
    ENDLOOP.

  ENDMETHOD.

  METHOD display_data.
    "Declaration for ALV
    DATA: lx_msg    TYPE REF TO cx_salv_msg,
          o_alv     TYPE REF TO cl_salv_table,
          columns   TYPE REF TO cl_salv_columns_table,
          column    TYPE REF TO cl_salv_column,
          functions TYPE REF TO cl_salv_functions_list.

    IF lv_upload_alt = abap_true.

      TRY.
          cl_salv_table=>factory(
            IMPORTING
              r_salv_table = o_alv
            CHANGING
              t_table      = lt_alt_alv ).
        CATCH cx_salv_msg INTO lx_msg.
          RETURN.
      ENDTRY.

    ENDIF.

    IF lv_upload_mix = abap_true.

      TRY.
          cl_salv_table=>factory(
            IMPORTING
              r_salv_table = o_alv
            CHANGING
              t_table      = lt_file_mix_alv ).
        CATCH cx_salv_msg INTO lx_msg.
          RETURN.
      ENDTRY.

    ENDIF.

    columns = o_alv->get_columns( ).
    columns->set_optimize( ).

    functions = o_alv->get_functions( ).
    functions->set_all( ).

    "display Alv
    o_alv->display( ).

  ENDMETHOD.

  METHOD call_transaction_ck91.
    "clear batch input table
    CLEAR it_bdcdata.
    "Prepare batch input data
    PERFORM bdc_dynpro      USING 'SAPLCKBASCR1' '0100'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'CKMLMV001-WERKS'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=ENTR'.
    PERFORM bdc_field       USING 'CKMLMV001-MATNR'
                                  iv_matnr.
    PERFORM bdc_field       USING 'CKMLMV001-WERKS'
                                  iv_plant.
    PERFORM bdc_field       USING 'CKBTSEL-FERT'
                                  'X'.
    PERFORM bdc_dynpro      USING 'SAPLCKBASCR1' '0500'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'CKMLMV001-VERID_ND'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=STOR'.
    PERFORM bdc_field       USING 'CKMLMV001-VERID_ND'
                                  iv_prod_version.
    PERFORM bdc_field       USING 'CKMLMV001-LOSGR_PC'
                                  '100'.
    PERFORM bdc_dynpro      USING 'SAPLCKBASCR1' '0100'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '/EBACK'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'CKMLMV001-MATNR'.

    TRY.
        CALL TRANSACTION c_ck91 WITH AUTHORITY-CHECK USING it_bdcdata
                          MODE mode
                          UPDATE 'S'
                          MESSAGES INTO et_return.

      CATCH cx_sy_authorization_error INTO DATA(lr_exc).
        lv_missing_auth = 'X'.
        RETURN.
    ENDTRY.
  ENDMETHOD.



  METHOD call_transaction_ck91_wpopup.

    "clear batch input table
    CLEAR it_bdcdata.
    "Prepare batch input data
    PERFORM bdc_dynpro      USING 'SAPLCKBASCR1' '0100'.

    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'CKMLMV001-WERKS'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=ENTR'.
    PERFORM bdc_field       USING 'CKMLMV001-MATNR'
                                  iv_matnr.
    PERFORM bdc_field       USING 'CKMLMV001-WERKS'
                                  iv_plant.
    PERFORM bdc_field       USING 'CKBTSEL-FERT'
                                  'X'.

    PERFORM bdc_dynpro      USING 'SAPLSPO5' '0110'.

    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=OK'.
    PERFORM bdc_field       USING 'BDC_SUBSCR'
                                  'SAPLSPO5                                0180SUBSCREEN_CONTROL'.
    PERFORM bdc_field       USING 'BDC_SUBSCR'
                                  'SAPLSPO5                                0150SUBSCREEN_STEPLOOP'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'SPOPLI-SELFLAG(02)'.
    PERFORM bdc_dynpro      USING 'SAPLCKBASCR1' '0500'.

    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'CKMLMV001-VERID_ND'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=STOR'.
    PERFORM bdc_field       USING 'CKMLMV001-VERID_ND'
                                  iv_prod_version.
    PERFORM bdc_field       USING 'CKMLMV001-LOSGR_PC'
                                  '100'.
    PERFORM bdc_dynpro      USING 'SAPLCKBASCR1' '0100'.
    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '/EBACK'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'CKMLMV001-MATNR'.

    TRY.
        CALL TRANSACTION c_ck91 WITH AUTHORITY-CHECK USING it_bdcdata
                          MODE mode
                          UPDATE 'S'
                          MESSAGES INTO et_return.

      CATCH cx_sy_authorization_error INTO DATA(lr_exc).
        lv_missing_auth = 'X'.
        RETURN.
    ENDTRY.
  ENDMETHOD.
ENDCLASS.
*----------------------------------------------------------------------*
*        Start new screen                                              *
*----------------------------------------------------------------------*
FORM bdc_dynpro USING program TYPE bdc_prog
                      dynpro TYPE bdc_dynr.
  CLEAR wa_bdcdata.
  wa_bdcdata-program  = program.
  wa_bdcdata-dynpro   = dynpro.
  wa_bdcdata-dynbegin = 'X'.
  APPEND wa_bdcdata TO it_bdcdata.

ENDFORM.
*----------------------------------------------------------------------*
*        Insert field                                                  *
*----------------------------------------------------------------------*
FORM bdc_field USING fnam TYPE fnam_____4
                     fval TYPE any.
  CLEAR wa_bdcdata.
  wa_bdcdata-fnam = fnam.
  wa_bdcdata-fval = fval.
  SHIFT wa_bdcdata-fval LEFT DELETING LEADING space.
  APPEND wa_bdcdata TO it_bdcdata.

ENDFORM.

*&---------------------------------------------------------------------*
*& Include          ZFIN_UPD_PROCALT_MIXRATIO_TOP
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& DD ID        :                                                      *
*& FS ID        :                                                      *
*& User Stories : EWOW-36157                                           *
*& Work Item    : 8000023110                                           *
*&---------------------------------------------------------------------*
*& Global declarations                                                 *
*&---------------------------------------------------------------------*
*& Transport    : DA2K902869                                           *
*&---------------------------------------------------------------------*
*& Change Log:      Selection Screen                                   *
*&---------------------------------------------------------------------*
*& Author      ¦ Date           ¦ Comment                              *
*&---------------------------------------------------------------------*
*  DEHSUMU     30.05.2022       Initial Build                          *
*&---------------------------------------------------------------------*

 "Data declaration
 TYPES : BEGIN OF ty_proc_alt ,
           matnr        TYPE matnr,
           plant        TYPE werks_d,
           proc_type    TYPE ckml_btyp,
           prod_version TYPE verid,
         END OF ty_proc_alt.


 TYPES : BEGIN OF ty_proc_alt_alv ,
           semaphore    TYPE char4,
           status       TYPE char10,
           matnr        TYPE matnr,
           plant        TYPE werks_d,
           proc_type    TYPE ckml_btyp,
           prod_version TYPE verid,
           message      TYPE char100,
         END OF ty_proc_alt_alv.

 DATA : lt_file_alt TYPE TABLE OF ty_proc_alt,
        lt_alt_alv  TYPE TABLE OF ty_proc_alt_alv,
        ls_file_alt TYPE ty_proc_alt.

 TYPES : BEGIN OF ty_mix_cost,
           matnr        TYPE matnr,
           plant        TYPE werks_d,
           mix_ind      TYPE ckml_mgtyp,
           perio        TYPE poper,
           gjahr        TYPE gjahr,
           prod_version TYPE verid,
           mix_per      TYPE ckmlmv003-misch_verh,
         END OF ty_mix_cost.


 TYPES : BEGIN OF ty_mix_cost_alv,
           semaphore    TYPE char4,
           status       TYPE char10,
           matnr        TYPE matnr,
           plant        TYPE werks_d,
           mix_ind      TYPE ckml_mgtyp,
           perio        TYPE poper,
           gjahr        TYPE gjahr,
           prod_version TYPE verid,
           mix_per      TYPE ckmlmv003-misch_verh,
           message      TYPE char100,
         END OF ty_mix_cost_alv.

 DATA : lt_file_mix TYPE TABLE OF ty_mix_cost,
        lt_file_mix_alv TYPE TABLE OF ty_mix_cost_alv,
        ls_file_mix TYPE ty_mix_cost.

 DATA: it_bdcdata      TYPE STANDARD TABLE OF bdcdata,
       wa_bdcdata      LIKE LINE OF it_bdcdata,   " Structure type of bdcdata
       it_msg          TYPE TABLE OF bdcmsgcoll,  " Collecting Error messages
       lv_msg          TYPE bapi_msg,
       lt_raw_data     TYPE truxs_t_text_data,
       lv_missing_auth TYPE flag. "Flag for authorization error


     CONSTANTS: c_ok  TYPE char3 VALUE 'OK',
               c_nok TYPE char3 VALUE 'NOK'.

*&---------------------------------------------------------------------*
*& Include          ZFIN_UPD_PROCALT_MIXRATIO_SEL
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& DD ID        :                                                      *
*& FS ID        :                                                      *
*& User Stories : EWOW-36157                                           *
*& Work Item    : 8000023110                                           *
*&---------------------------------------------------------------------*
*& Global declarations                                                 *
*&---------------------------------------------------------------------*
*& Transport    : DA2K902869                                           *
*&---------------------------------------------------------------------*
*& Change Log:      Selection Screen                                   *
*&---------------------------------------------------------------------*
*& Author      ¦ Date           ¦ Comment                              *
*&---------------------------------------------------------------------*
*  DEHSUMU     30.05.2022       Initial Build                          *
*&---------------------------------------------------------------------*
*Selection Screen
SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE TEXT-t01.
  PARAMETERS:   p_file   LIKE rlgrap-filename . "OBLIGATORY.

  PARAMETERS : rb_dnalt RADIOBUTTON GROUP rb1 MODIF ID rad,
               rb_upalt RADIOBUTTON GROUP rb1,
               rb_dnmix RADIOBUTTON GROUP rb1,
               rb_upmix RADIOBUTTON GROUP rb1.

SELECTION-SCREEN END OF BLOCK b01.
